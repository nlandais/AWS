provider "aws" {
  region = "${var.aws_region}"
}

data "aws_vpc" "default" {
  default = true
}

data "aws_internet_gateway" "default" {
  filter {
    name   = "attachment.vpc-id"
    values = ["${data.aws_vpc.default.id}"]
  }
}

data "aws_subnet" "private" {
  filter {
    name   = "tag:Name"
    values = ["Private"]
  }
}

data "aws_subnet" "public" {
  filter {
    name   = "tag:Name"
    values = ["Public"]
  }
}

data "aws_eip" "nat_gw_ip" {
  filter {
    name   = "tag:Name"
    values = ["gw_ip"]
  }
}

data "aws_eip" "openvpn_ip" {
  filter {
    name   = "tag:Name"
    values = ["openvpn_ip"]
  }
}


resource "aws_nat_gateway" "nat_gw" {
  allocation_id = "${data.aws_eip.nat_gw_ip.id}"
  subnet_id = "${data.aws_subnet.public.id}"
  tags {
    Name = "gw"
  }
}

resource "aws_default_security_group" "default" {
  vpc_id = "${data.aws_vpc.default.id}"

  ingress {
    protocol  = "tcp"
    from_port = 80
    to_port   = 80
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    protocol  = "tcp"
    from_port = 443
    to_port   = 443
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    protocol  = "tcp"
    from_port = 22
    to_port   = 22
    cidr_blocks = ["${data.aws_subnet.private.cidr_block}"]
  }

  ingress {
    protocol  = "tcp"
    from_port = 3389
    to_port   = 3389
    cidr_blocks = ["${data.aws_subnet.private.cidr_block}"]
  }

  # outbound internet access
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_security_group" "openvpn" {
  vpc_id = "${data.aws_vpc.default.id}"
  name = "OpenVPN Access Server"
  description = "This security group was generated by AWS Marketplace and is based on recommended settings for OpenVPN Access Server version 2.6.1a provided by OpenVPN Technologies, Inc."

  ingress {
    protocol  = "tcp"
    from_port = 80
    to_port   = 80
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    protocol  = "tcp"
    from_port = 443
    to_port   = 443
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    protocol  = "tcp"
    from_port = 22
    to_port   = 22
    cidr_blocks = ["${var.myip}/32"]
  }

  ingress {
    protocol  = "tcp"
    from_port = 943
    to_port   = 943
    cidr_blocks = ["${var.myip}/32"]
  }

  ingress {
    protocol  = "tcp"
    from_port = 1194
    to_port   = 1194
    cidr_blocks = ["${var.myip}/32"]
  }

  # outbound internet access
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "vpn" {
  ami = "${var.vpn_ami_id}"
  subnet_id = "${data.aws_subnet.public.id}"
  associate_public_ip_address = true
  instance_type = "t2.micro"
  disable_api_termination = true
  vpc_security_group_ids = ["${aws_security_group.openvpn.id}"]
  tags {
    Name = "OpenVPN"
  }
  depends_on = ["aws_security_group.openvpn"]
}
